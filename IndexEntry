/*This class will record the instance (index) of the words
*without adding the same line multiple times
* and with list of numbers (indexes) for each word going across, separated by commas
* @author Sonja Eliason
* @author Taylor Rossini
* @date 11.7.14
* @version 0.1
*/

import java.util.ArrayList;

public class IndexEntry {

private String word;
private ArrayList<Integer> numsList;

/* Constructor to create a new ArrayList of instances for each word. 
* @param String word representing a word in the text
*/
public IndexEntry(String word)
{
  this.word = word.toUpperCase();
  
  this.numsList = new ArrayList<Integer>();
}

/* Method to add a new number, or instance of a word, to a word's ArrayList of instances. 
* @param int num representing the position (line number) of a word in thet text
*/

public void add(int num)
{
  Integer number=new Integer(num);
  if (!(numsList.contains(number)))
  {
     numsList.add(number);
  }
  }

 /* 
* Method to return a word in the text
* @return String word 
*The String word represents the word in the text
*/ 

public String getWord() 
 {
    return word;
}

/*
* Method to return a word in the text and the line numbers of all instances of that word as a String
* @return String that gives a word in the text and all instances of that word
*/



public String toString()
{
  String listNums=""+numsList;
  // Fix up listNums to not have []'s
return word + " " + listNums.substring(1,(listNums.length()-1));
  
  }
}
  

  

